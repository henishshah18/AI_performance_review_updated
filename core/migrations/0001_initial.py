# Generated by Django 4.2 on 2025-06-15 13:22

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        help_text="User's email address (used for login)",
                        max_length=254,
                        unique=True,
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("hr_admin", "HR Admin"),
                            ("manager", "Manager"),
                            ("individual_contributor", "Individual Contributor"),
                        ],
                        default="individual_contributor",
                        help_text="User's role in the organization",
                        max_length=50,
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        blank=True, help_text="User's phone number", max_length=20
                    ),
                ),
                (
                    "role_title",
                    models.CharField(
                        blank=True, help_text="User's job title", max_length=100
                    ),
                ),
                (
                    "bio",
                    models.TextField(
                        blank=True, help_text="User's bio/description", max_length=500
                    ),
                ),
                (
                    "skills",
                    models.JSONField(
                        blank=True, default=list, help_text="User's skills as a list"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, help_text="Whether this user account is active"
                    ),
                ),
                (
                    "hire_date",
                    models.DateField(
                        blank=True, help_text="User's hire date", null=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "users",
                "ordering": ["last_name", "first_name"],
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="SystemSettings",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "key",
                    models.CharField(
                        help_text="Setting key", max_length=100, unique=True
                    ),
                ),
                (
                    "value",
                    models.JSONField(
                        help_text="Setting value (can be any JSON-serializable data)"
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Description of this setting",
                        max_length=2000,
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, help_text="Whether this setting is active"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        help_text="User who created this setting",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="created_settings",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "system_settings",
                "ordering": ["key"],
            },
        ),
        migrations.CreateModel(
            name="Department",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        choices=[
                            ("engineering", "Engineering"),
                            ("product", "Product"),
                            ("design", "Design"),
                            ("marketing", "Marketing"),
                            ("sales", "Sales"),
                            ("hr", "Human Resources"),
                            ("finance", "Finance"),
                            ("operations", "Operations"),
                        ],
                        help_text="Department name",
                        max_length=100,
                        unique=True,
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, help_text="Department description", max_length=2000
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, help_text="Whether this department is active"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "head_of_department",
                    models.ForeignKey(
                        blank=True,
                        help_text="Head of this department",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="headed_departments",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "departments",
                "ordering": ["name"],
            },
        ),
        migrations.AddField(
            model_name="user",
            name="department",
            field=models.ForeignKey(
                help_text="User's department",
                on_delete=django.db.models.deletion.PROTECT,
                related_name="users",
                to="core.department",
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="groups",
            field=models.ManyToManyField(
                blank=True,
                help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                related_name="user_set",
                related_query_name="user",
                to="auth.group",
                verbose_name="groups",
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="manager",
            field=models.ForeignKey(
                blank=True,
                help_text="User's direct manager",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="direct_reports",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="user_permissions",
            field=models.ManyToManyField(
                blank=True,
                help_text="Specific permissions for this user.",
                related_name="user_set",
                related_query_name="user",
                to="auth.permission",
                verbose_name="user permissions",
            ),
        ),
        migrations.AddIndex(
            model_name="systemsettings",
            index=models.Index(fields=["key"], name="system_sett_key_052b30_idx"),
        ),
        migrations.AddIndex(
            model_name="systemsettings",
            index=models.Index(
                fields=["is_active"], name="system_sett_is_acti_7e04e2_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="department",
            index=models.Index(fields=["name"], name="departments_name_c59a45_idx"),
        ),
        migrations.AddIndex(
            model_name="department",
            index=models.Index(
                fields=["is_active"], name="departments_is_acti_a777bd_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="user",
            index=models.Index(fields=["email"], name="users_email_4b85f2_idx"),
        ),
        migrations.AddIndex(
            model_name="user",
            index=models.Index(fields=["role"], name="users_role_0ace22_idx"),
        ),
        migrations.AddIndex(
            model_name="user",
            index=models.Index(fields=["department"], name="users_departm_5a2d9a_idx"),
        ),
        migrations.AddIndex(
            model_name="user",
            index=models.Index(fields=["manager"], name="users_manager_ef8c1d_idx"),
        ),
        migrations.AddIndex(
            model_name="user",
            index=models.Index(fields=["is_active"], name="users_is_acti_847b48_idx"),
        ),
    ]
