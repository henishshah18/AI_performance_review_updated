# Generated by Django 4.2 on 2025-06-15 18:00

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("analytics", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="UserActivityLog",
            fields=[
                (
                    "id",
                    models.UUIDField(editable=False, primary_key=True, serialize=False),
                ),
                (
                    "activity_type",
                    models.CharField(
                        choices=[
                            ("login", "User Login"),
                            ("logout", "User Logout"),
                            ("objective_created", "Objective Created"),
                            ("objective_updated", "Objective Updated"),
                            ("objective_completed", "Objective Completed"),
                            ("goal_created", "Goal Created"),
                            ("goal_updated", "Goal Updated"),
                            ("goal_completed", "Goal Completed"),
                            ("task_created", "Task Created"),
                            ("task_updated", "Task Updated"),
                            ("task_completed", "Task Completed"),
                            ("feedback_given", "Feedback Given"),
                            ("feedback_received", "Feedback Received"),
                            ("review_started", "Review Started"),
                            ("review_submitted", "Review Submitted"),
                            ("review_completed", "Review Completed"),
                            ("profile_updated", "Profile Updated"),
                            ("team_joined", "Team Joined"),
                            ("team_left", "Team Left"),
                        ],
                        max_length=50,
                    ),
                ),
                ("activity_details", models.JSONField(default=dict)),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                ("user_agent", models.TextField(blank=True, null=True)),
                ("session_id", models.CharField(blank=True, max_length=255, null=True)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="activity_logs",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-timestamp"],
            },
        ),
        migrations.CreateModel(
            name="ReportTemplate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("description", models.TextField()),
                (
                    "report_type",
                    models.CharField(
                        choices=[
                            ("okr_summary", "OKR Summary"),
                            ("feedback_analysis", "Feedback Analysis"),
                            ("review_insights", "Review Insights"),
                            ("performance_overview", "Performance Overview"),
                            ("engagement_metrics", "Engagement Metrics"),
                            ("executive_summary", "Executive Summary"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "frequency",
                    models.CharField(
                        choices=[
                            ("daily", "Daily"),
                            ("weekly", "Weekly"),
                            ("monthly", "Monthly"),
                            ("quarterly", "Quarterly"),
                        ],
                        max_length=20,
                    ),
                ),
                ("template_config", models.JSONField(default=dict)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_report_templates",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "recipients",
                    models.ManyToManyField(
                        related_name="report_subscriptions", to=settings.AUTH_USER_MODEL
                    ),
                ),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="PerformanceMetrics",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("period_start", models.DateField()),
                ("period_end", models.DateField()),
                ("objectives_assigned", models.IntegerField(default=0)),
                ("objectives_completed", models.IntegerField(default=0)),
                ("goals_assigned", models.IntegerField(default=0)),
                ("goals_completed", models.IntegerField(default=0)),
                ("tasks_assigned", models.IntegerField(default=0)),
                ("tasks_completed", models.IntegerField(default=0)),
                ("feedback_given", models.IntegerField(default=0)),
                ("feedback_received", models.IntegerField(default=0)),
                ("feedback_quality_score", models.FloatField(default=0.0)),
                ("reviews_completed", models.IntegerField(default=0)),
                ("average_review_score", models.FloatField(default=0.0)),
                ("login_frequency", models.IntegerField(default=0)),
                ("platform_usage_hours", models.FloatField(default=0.0)),
                ("overall_performance_score", models.FloatField(default=0.0)),
                ("goal_completion_rate", models.FloatField(default=0.0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="performance_metrics",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-period_end", "user"],
            },
        ),
        migrations.CreateModel(
            name="GeneratedReport",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("report_date", models.DateField()),
                ("file_path", models.CharField(max_length=500)),
                ("file_size", models.BigIntegerField(default=0)),
                ("generation_time", models.FloatField(default=0.0)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("generating", "Generating"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("error_message", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "template",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="generated_reports",
                        to="analytics.reporttemplate",
                    ),
                ),
            ],
            options={
                "ordering": ["-report_date"],
            },
        ),
        migrations.CreateModel(
            name="AnalyticsSnapshot",
            fields=[
                (
                    "id",
                    models.UUIDField(editable=False, primary_key=True, serialize=False),
                ),
                (
                    "snapshot_type",
                    models.CharField(
                        choices=[
                            ("daily", "Daily"),
                            ("weekly", "Weekly"),
                            ("monthly", "Monthly"),
                            ("quarterly", "Quarterly"),
                        ],
                        max_length=20,
                    ),
                ),
                ("snapshot_date", models.DateField()),
                ("department", models.CharField(blank=True, max_length=50, null=True)),
                ("metrics_data", models.JSONField(default=dict)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-snapshot_date", "snapshot_type"],
            },
        ),
        migrations.AddIndex(
            model_name="useractivitylog",
            index=models.Index(
                fields=["user", "timestamp"], name="analytics_u_user_id_9f6b02_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="useractivitylog",
            index=models.Index(
                fields=["activity_type", "timestamp"],
                name="analytics_u_activit_7c778d_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="useractivitylog",
            index=models.Index(
                fields=["timestamp"], name="analytics_u_timesta_412843_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="performancemetrics",
            index=models.Index(
                fields=["user", "period_end"], name="analytics_p_user_id_e06da7_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="performancemetrics",
            index=models.Index(
                fields=["period_start", "period_end"],
                name="analytics_p_period__d4cbed_idx",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="performancemetrics",
            unique_together={("user", "period_start", "period_end")},
        ),
        migrations.AlterUniqueTogether(
            name="generatedreport",
            unique_together={("template", "report_date")},
        ),
        migrations.AddIndex(
            model_name="analyticssnapshot",
            index=models.Index(
                fields=["snapshot_type", "snapshot_date"],
                name="analytics_a_snapsho_5853ce_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="analyticssnapshot",
            index=models.Index(
                fields=["department", "snapshot_date"],
                name="analytics_a_departm_e13735_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="analyticssnapshot",
            index=models.Index(
                fields=["user", "snapshot_date"], name="analytics_a_user_id_483341_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="analyticssnapshot",
            unique_together={("snapshot_type", "snapshot_date", "department", "user")},
        ),
    ]
