import React from "react"; export interface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> { variant?: "primary" | "secondary" | "outline" | "ghost" | "danger"; size?: "sm" | "md" | "lg"; children: React.ReactNode; className?: string; } export function Button({ variant = "primary", size = "md", children, className = "", disabled, ...props }: ButtonProps) { const baseClasses = "inline-flex items-center justify-center font-medium transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed"; const variantClasses = { primary: "btn-primary", secondary: "btn-secondary", outline: "btn-outline", ghost: "btn-ghost", danger: "btn-danger" }; const sizeClasses = { sm: "px-3 py-1.5 text-sm rounded-md", md: "px-4 py-2 text-sm rounded-lg", lg: "px-6 py-3 text-base rounded-lg" }; const classes = `${baseClasses} ${variantClasses[variant]} ${sizeClasses[size]} ${className}`.trim(); return <button className={classes} disabled={disabled} {...props}>{children}</button>; } export default Button;
