# Generated by Django 4.2 on 2025-06-15 16:27

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("okr", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Feedback",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "feedback_type",
                    models.CharField(
                        choices=[
                            ("commendation", "Commendation"),
                            ("guidance", "Guidance"),
                            ("constructive", "Constructive"),
                        ],
                        help_text="Type of feedback being given",
                        max_length=20,
                    ),
                ),
                (
                    "visibility",
                    models.CharField(
                        choices=[("private", "Private"), ("public", "Public")],
                        default="private",
                        help_text="Who can see this feedback",
                        max_length=10,
                    ),
                ),
                (
                    "content",
                    models.TextField(
                        help_text="The feedback content (max 500 characters)",
                        validators=[django.core.validators.MaxLengthValidator(500)],
                    ),
                ),
                (
                    "is_anonymous",
                    models.BooleanField(
                        default=False,
                        help_text="Whether this feedback should be shown as anonymous",
                    ),
                ),
                (
                    "sentiment_analyzed",
                    models.BooleanField(
                        default=False,
                        help_text="Whether AI sentiment analysis has been performed",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "from_user",
                    models.ForeignKey(
                        help_text="User who is giving the feedback",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="feedback_given",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "related_goal",
                    models.ForeignKey(
                        blank=True,
                        help_text="Related goal if feedback is about specific goal",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="feedback_items",
                        to="okr.goal",
                    ),
                ),
                (
                    "related_objective",
                    models.ForeignKey(
                        blank=True,
                        help_text="Related objective if feedback is about specific objective",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="feedback_items",
                        to="okr.objective",
                    ),
                ),
                (
                    "related_task",
                    models.ForeignKey(
                        blank=True,
                        help_text="Related task if feedback is about specific task",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="feedback_items",
                        to="okr.individualtask",
                    ),
                ),
                (
                    "to_user",
                    models.ForeignKey(
                        help_text="User who is receiving the feedback",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="feedback_received",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="FeedbackTagTemplate",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Name of the tag template",
                        max_length=100,
                        unique=True,
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Description of what this tag represents",
                        null=True,
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("skill", "Skill"),
                            ("behavior", "Behavior"),
                            ("value", "Value"),
                            ("competency", "Competency"),
                        ],
                        help_text="Category this tag belongs to",
                        max_length=20,
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Whether this tag template is available for use",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        help_text="HR Admin who created this tag template",
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["category", "name"],
            },
        ),
        migrations.CreateModel(
            name="FeedbackTag",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "tag_name",
                    models.CharField(help_text="Name of the tag", max_length=100),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "feedback",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tags",
                        to="feedback.feedback",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="FeedbackComment",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "content",
                    models.TextField(
                        help_text="Comment content (max 300 characters)",
                        validators=[django.core.validators.MaxLengthValidator(300)],
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "comment_by",
                    models.ForeignKey(
                        help_text="User who made the comment",
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "feedback",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="comments",
                        to="feedback.feedback",
                    ),
                ),
            ],
            options={
                "ordering": ["created_at"],
            },
        ),
        migrations.AddIndex(
            model_name="feedbacktagtemplate",
            index=models.Index(
                fields=["category"], name="feedback_fe_categor_77a6df_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="feedbacktagtemplate",
            index=models.Index(
                fields=["is_active"], name="feedback_fe_is_acti_6cd645_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="feedbacktagtemplate",
            index=models.Index(
                fields=["created_at"], name="feedback_fe_created_e71d21_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="feedbacktag",
            index=models.Index(
                fields=["tag_name"], name="feedback_fe_tag_nam_915f16_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="feedbacktag",
            index=models.Index(
                fields=["created_at"], name="feedback_fe_created_b4bc5d_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="feedbacktag",
            unique_together={("feedback", "tag_name")},
        ),
        migrations.AddIndex(
            model_name="feedbackcomment",
            index=models.Index(
                fields=["feedback", "created_at"], name="feedback_fe_feedbac_8bca7e_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="feedbackcomment",
            index=models.Index(
                fields=["comment_by"], name="feedback_fe_comment_37de3c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="feedback",
            index=models.Index(
                fields=["from_user", "created_at"],
                name="feedback_fe_from_us_b10200_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="feedback",
            index=models.Index(
                fields=["to_user", "created_at"], name="feedback_fe_to_user_4f5663_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="feedback",
            index=models.Index(
                fields=["feedback_type"], name="feedback_fe_feedbac_ba1d78_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="feedback",
            index=models.Index(
                fields=["visibility"], name="feedback_fe_visibil_ddd896_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="feedback",
            index=models.Index(
                fields=["created_at"], name="feedback_fe_created_84c297_idx"
            ),
        ),
    ]
